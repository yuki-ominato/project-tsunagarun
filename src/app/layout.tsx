import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { SidebarCalendarEvents } from "@/components/SidebarCalendarEvents";
import { SidebarPickupEvents } from "@/components/SidebarPickupEvents";
import { SidebarReviews } from "@/components/SidebarReviews";
// import { usePathname } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function isSidebarLayout(path: string) {
  // Home画面とthema画面のみ3カラム
  return (
    path === "/" ||
    path.startsWith("/theme") ||
    path.startsWith("/(main)/theme")
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // サーバーコンポーネントではusePathnameは使えないため、window.location.pathnameで判定するか、
  // propsでpage側から"sidebar"フラグを渡すのがNext.js流。ここでは簡易的に全画面3カラム→1カラム分岐例を記載。
  // 本番ではpage.tsxやthema系でレイアウトを切り替えるのが推奨。
  let path = "";
  if (typeof window !== "undefined") {
    path = window.location.pathname;
  }
  const showSidebar = isSidebarLayout(path);

  return (
    <html lang="ja">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {showSidebar ? (
          <div className="layout">
            <aside className="sidebar-left scrollable-sidebar">
              <SidebarCalendarEvents />
            </aside>
            <main className="main-content scrollable-main">
              {children}
            </main>
            <aside className="sidebar-right space-y-8 scrollable-sidebar">
              <SidebarPickupEvents />
              <SidebarReviews />
            </aside>
          </div>
        ) : (
          <main className="main-content" style={{margin: "0 auto", maxWidth: 600}}>
            {children}
          </main>
        )}
      </body>
    </html>
  );
}
